{"version":3,"sources":["TBlockRenderer.tsx"],"names":["TDefaultBlockRenderer","tnode","children","overridingChildren","style","onPress","viewProps","propsForChildren","TNodeChildrenRenderer","commonProps","testID","tagName","React","createElement","GenericPressable","View","TBlockRenderer","props","assembledProps","Renderer"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGA;;AACA;;;;AAEO,MAAMA,qBAA+C,GAAG,CAAC;AAC9DC,EAAAA,KAD8D;AAE9DC,EAAAA,QAAQ,EAAEC,kBAFoD;AAG9DC,EAAAA,KAH8D;AAI9DC,EAAAA,OAJ8D;AAK9DC,EAAAA,SAL8D;AAM9DC,EAAAA;AAN8D,CAAD,KAOzD;AACJ,QAAMC,qBAAqB,GAAG,yDAA9B;AACA,QAAMN,QAAQ,GAAGC,kBAAH,aAAGA,kBAAH,cAAGA,kBAAH,gBACZ,6BAAC,qBAAD;AAAuB,IAAA,KAAK,EAAEF,KAA9B;AAAqC,IAAA,gBAAgB,EAAEM;AAAvD,IADF;AAGA,QAAME,WAAW,GAAG,EAClB,GAAGH,SADe;AAElBF,IAAAA,KAAK,EAAEE,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEF,KAAX,GAAmB,CAACA,KAAD,EAAQE,SAAS,CAACF,KAAlB,CAAnB,GAA8CA,KAFnC;AAGlBM,IAAAA,MAAM,EAAET,KAAK,CAACU;AAHI,GAApB;;AAKA,MAAI,OAAON,OAAP,KAAmB,UAAvB,EAAmC;AACjC,wBAAOO,eAAMC,aAAN,CACLC,yBADK,EAEL;AAAET,MAAAA,OAAF;AAAW,SAAGI;AAAd,KAFK,EAGLP,QAHK,CAAP;AAKD;;AACD,sBAAOU,eAAMC,aAAN,CAAoBE,iBAApB,EAA0BN,WAA1B,EAAuCP,QAAvC,CAAP;AACD,CAzBM;;;;AA2BP,MAAMc,cAAc,GAAIC,KAAD,IAA0C;AAC/D,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA+B,sCACnCF,KADmC,EAEnCjB,qBAFmC,CAArC;AAIA,sBAAOY,eAAMC,aAAN,CAAoBM,QAApB,EAA8BD,cAA9B,CAAP;AACD,CAND;;eAQeF,c","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { TBlock } from '@native-html/transient-render-engine';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport { TDefaultRenderer } from './shared-types';\nimport { TNodeSubRendererProps } from './internal-types';\nimport GenericPressable from './GenericPressable';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\n\nexport const TDefaultBlockRenderer: TDefaultRenderer<TBlock> = ({\n  tnode,\n  children: overridingChildren,\n  style,\n  onPress,\n  viewProps,\n  propsForChildren\n}) => {\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const children = overridingChildren ?? (\n    <TNodeChildrenRenderer tnode={tnode} propsForChildren={propsForChildren} />\n  );\n  const commonProps = {\n    ...viewProps,\n    style: viewProps?.style ? [style, viewProps.style] : style,\n    testID: tnode.tagName\n  };\n  if (typeof onPress === 'function') {\n    return React.createElement(\n      GenericPressable,\n      { onPress, ...commonProps },\n      children\n    );\n  }\n  return React.createElement(View, commonProps, children);\n};\n\nconst TBlockRenderer = (props: TNodeSubRendererProps<TBlock>) => {\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    props,\n    TDefaultBlockRenderer\n  );\n  return React.createElement(Renderer, assembledProps);\n};\n\nexport default TBlockRenderer;\n"]}