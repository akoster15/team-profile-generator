"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TDefaultBlockRenderer = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _TChildrenRendererContext = require("./context/TChildrenRendererContext");

var _GenericPressable = _interopRequireDefault(require("./GenericPressable"));

var _useAssembledCommonProps = _interopRequireDefault(require("./hooks/useAssembledCommonProps"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const TDefaultBlockRenderer = ({
  tnode,
  children: overridingChildren,
  style,
  onPress,
  viewProps,
  propsForChildren
}) => {
  const TNodeChildrenRenderer = (0, _TChildrenRendererContext.useTNodeChildrenRenderer)();
  const children = overridingChildren !== null && overridingChildren !== void 0 ? overridingChildren : /*#__PURE__*/_react.default.createElement(TNodeChildrenRenderer, {
    tnode: tnode,
    propsForChildren: propsForChildren
  });
  const commonProps = { ...viewProps,
    style: viewProps !== null && viewProps !== void 0 && viewProps.style ? [style, viewProps.style] : style,
    testID: tnode.tagName
  };

  if (typeof onPress === 'function') {
    return /*#__PURE__*/_react.default.createElement(_GenericPressable.default, {
      onPress,
      ...commonProps
    }, children);
  }

  return /*#__PURE__*/_react.default.createElement(_reactNative.View, commonProps, children);
};

exports.TDefaultBlockRenderer = TDefaultBlockRenderer;

const TBlockRenderer = props => {
  const {
    assembledProps,
    Renderer
  } = (0, _useAssembledCommonProps.default)(props, TDefaultBlockRenderer);
  return /*#__PURE__*/_react.default.createElement(Renderer, assembledProps);
};

var _default = TBlockRenderer;
exports.default = _default;
//# sourceMappingURL=TBlockRenderer.js.map