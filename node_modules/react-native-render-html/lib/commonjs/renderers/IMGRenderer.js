"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useIMGElementProps = useIMGElementProps;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _IMGElement = _interopRequireDefault(require("../elements/IMGElement"));

var _SharedPropsProvider = require("../context/SharedPropsProvider");

var _useNormalizedUrl = _interopRequireDefault(require("../hooks/useNormalizedUrl"));

var _RenderersPropsProvider = require("../context/RenderersPropsProvider");

var _useContentWidth = _interopRequireDefault(require("../hooks/useContentWidth"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A hook to produce props consumable by {@link IMGElement} component
 * from custom renderer props.
 */
function useIMGElementProps(props) {
  const {
    style,
    tnode,
    onPress
  } = props;
  const contentWidth = (0, _useContentWidth.default)();
  const {
    initialDimensions,
    enableExperimentalPercentWidth
  } = (0, _RenderersPropsProvider.useRendererProps)('img');
  const computeImagesMaxWidth = (0, _SharedPropsProvider.useComputeMaxWidthForTag)('img');
  const src = tnode.attributes.src || '';
  return {
    contentWidth,
    computeMaxWidth: computeImagesMaxWidth,
    enableExperimentalPercentWidth,
    initialDimensions,
    onPress,
    alt: tnode.attributes.alt,
    testID: 'img',
    altColor: tnode.styles.nativeTextFlow.color,
    source: {
      uri: (0, _useNormalizedUrl.default)(src)
    },
    style: style,
    width: tnode.attributes.width,
    height: tnode.attributes.height,
    objectFit: tnode.styles.webBlockRet.objectFit
  };
}

const IMGRenderer = props => {
  return /*#__PURE__*/_react.default.createElement(_IMGElement.default, useIMGElementProps(props));
};

var _default = IMGRenderer;
exports.default = _default;
//# sourceMappingURL=IMGRenderer.js.map