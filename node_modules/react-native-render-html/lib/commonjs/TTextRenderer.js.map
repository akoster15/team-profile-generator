{"version":3,"sources":["TTextRenderer.ts"],"names":["TDefaultTextRenderer","children","props","tnode","React","createElement","TDefaultTextualRenderer","data","TStandardTextRenderer","assembledProps","Renderer","TTextRenderer","InternalTextRenderer"],"mappings":";;;;;;;;AAAA;;AAIA;;AACA;;AACA;;;;AAEO,MAAMA,oBAA6C,GAAG,CAAC;AAC5DC,EAAAA,QAD4D;AAE5D,KAAGC;AAFyD,CAAD,KAGzB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,sBAAOE,eAAMC,aAAN,CACLC,gCADK,EAELJ,KAFK,EAGLD,QAHK,aAGLA,QAHK,cAGLA,QAHK,GAGOE,KAAK,CAACI,IAHb,CAAP;AAKD,CAVM;;;;AAYP,SAASC,qBAAT,CAA+BN,KAA/B,EAAoE;AAClE,QAAM;AAAEO,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA+B,sCACnCR,KADmC,EAEnCF,oBAFmC,CAArC;AAIA,sBAAOI,eAAMC,aAAN,CAAoBK,QAApB,EAA8BD,cAA9B,CAAP;AACD;;AAEc,SAASE,aAAT,CAAuBT,KAAvB,EAA4D;AACzE,QAAMU,oBAAoB,GAAG,qDAAwBV,KAAK,CAACC,KAA9B,CAA7B;;AACA,MAAIS,oBAAJ,EAA0B;AACxB,wBAAOR,eAAMC,aAAN,CAAoBO,oBAApB,CAAP;AACD;;AACD,sBAAOR,eAAMC,aAAN,CAAoBG,qBAApB,EAA2CN,KAA3C,CAAP;AACD","sourcesContent":["import React from 'react';\nimport { TText } from '@native-html/transient-render-engine';\nimport { TDefaultRenderer, TDefaultRendererProps } from './shared-types';\nimport { TNodeSubRendererProps } from './internal-types';\nimport { useInternalTextRenderer } from './context/RenderRegistryProvider';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\nimport TDefaultTextualRenderer from './TDefaultTextualRenderer';\n\nexport const TDefaultTextRenderer: TDefaultRenderer<TText> = ({\n  children,\n  ...props\n}: TDefaultRendererProps<TText>) => {\n  const { tnode } = props;\n  return React.createElement(\n    TDefaultTextualRenderer,\n    props,\n    children ?? tnode.data\n  );\n};\n\nfunction TStandardTextRenderer(props: TNodeSubRendererProps<TText>) {\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    props,\n    TDefaultTextRenderer\n  );\n  return React.createElement(Renderer, assembledProps);\n}\n\nexport default function TTextRenderer(props: TNodeSubRendererProps<TText>) {\n  const InternalTextRenderer = useInternalTextRenderer(props.tnode);\n  if (InternalTextRenderer) {\n    return React.createElement(InternalTextRenderer);\n  }\n  return React.createElement(TStandardTextRenderer, props);\n}\n"]}