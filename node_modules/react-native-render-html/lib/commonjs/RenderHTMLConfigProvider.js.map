{"version":3,"sources":["RenderHTMLConfigProvider.tsx"],"names":["childrenRendererContext","TChildrenRenderer","TNodeChildrenRenderer","renderHTMLConfigPropTypes","defaultTextProps","PropTypes","object","defaultViewProps","enableExperimentalMarginCollapsing","bool","remoteErrorView","func","remoteLoadingView","debug","computeEmbeddedMaxWidth","renderersProps","WebView","any","GenericPressable","defaultWebViewProps","pressableHightlightColor","string","customListStyleSpecs","renderers","RenderHTMLConfigProvider","props","children","sharedProps","engine","profile","prop","sourceLoaderConfig","__DEV__","defaultRenderError","defaultRenderLoading","getHTMLElementsModels","propTypes"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,uBAAuB,GAAG;AAC9BC,EAAAA,iBAAiB,EAAjBA,0BAD8B;AAE9BC,EAAAA,qBAAqB,EAArBA;AAF8B,CAAhC;AAOO,MAAMC,yBAAoD,GAAG;AAClEC,EAAAA,gBAAgB,EAAEC,mBAAUC,MADsC;AAElEC,EAAAA,gBAAgB,EAAEF,mBAAUC,MAFsC;AAGlEE,EAAAA,kCAAkC,EAAEH,mBAAUI,IAHoB;AAIlEC,EAAAA,eAAe,EAAEL,mBAAUM,IAJuC;AAKlEC,EAAAA,iBAAiB,EAAEP,mBAAUM,IALqC;AAMlEE,EAAAA,KAAK,EAAER,mBAAUI,IANiD;AAOlEK,EAAAA,uBAAuB,EAAET,mBAAUM,IAP+B;AAQlEI,EAAAA,cAAc,EAAEV,mBAAUC,MARwC;AASlEU,EAAAA,OAAO,EAAEX,mBAAUY,GAT+C;AAUlEC,EAAAA,gBAAgB,EAAEb,mBAAUY,GAVsC;AAWlEE,EAAAA,mBAAmB,EAAEd,mBAAUC,MAXmC;AAYlEc,EAAAA,wBAAwB,EAAEf,mBAAUgB,MAZ8B;AAalEC,EAAAA,oBAAoB,EAAEjB,mBAAUC,MAbkC;AAclEiB,EAAAA,SAAS,EAAElB,mBAAUC;AAd6C,CAA7D;AAiBP;AACA;AACA;AACA;;;;AACe,SAASkB,wBAAT,CACbC,KADa,EAEC;AACd,QAAM;AACJf,IAAAA,eADI;AAEJE,IAAAA,iBAFI;AAGJG,IAAAA,cAHI;AAIJW,IAAAA,QAJI;AAKJH,IAAAA,SALI;AAMJ,OAAGI;AANC,MAOFF,KAPJ;AAQA,QAAMG,MAAM,GAAG,qDAAf;AACA,QAAMC,OAAO,GAAG,0BAAY;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAZ,CAAhB;AACA,QAAMC,kBAAkB,GAAG,oBAAQ,MAAM;AACvCC,IAAAA,OAAO,IAAIH,OAAO,EAAlB;AACA,WAAO;AACLnB,MAAAA,eAAe,EAAEA,eAAe,IAAIuB,uCAD/B;AAELrB,MAAAA,iBAAiB,EAAEA,iBAAiB,IAAIsB;AAFnC,KAAP;AAID,GAN0B,EAMxB,CAACxB,eAAD,EAAkBE,iBAAlB,EAAqCiB,OAArC,CANwB,CAA3B;AAOA,sBACE,6BAAC,+BAAD;AACE,IAAA,SAAS,EAAEN,SADb;AAEE,IAAA,aAAa,EAAEK,MAAM,CAACO,qBAAP;AAFjB,kBAGE,6BAAC,4BAAD,EAAyBR,WAAzB,eACE,6BAAC,+BAAD,qBACE,6BAAC,+BAAD;AAAwB,IAAA,cAAc,EAAEZ;AAAxC,kBACE,6BAAC,iCAAD,CAA2B,QAA3B;AAAoC,IAAA,KAAK,EAAEf;AAA3C,kBACE,6BAAC,4BAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE+B;AAArC,KACGL,QADH,CADF,CADF,CADF,CADF,CAHF,CADF;AAiBD;AAED;AACA;AACA;;;AACAF,wBAAwB,CAACY,SAAzB,GAAqCjC,yBAArC","sourcesContent":["import React, { PropsWithChildren, ReactElement, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport RenderersPropsProvider from './context/RenderersPropsProvider';\nimport SharedPropsProvider from './context/SharedPropsProvider';\nimport TChildrenRenderersContext from './context/TChildrenRendererContext';\nimport { RenderHTMLConfig } from './shared-types';\nimport TNodeChildrenRenderer from './TNodeChildrenRenderer';\nimport TChildrenRenderer from './TChildrenRenderer';\nimport sourceLoaderContext, {\n  defaultRenderError,\n  defaultRenderLoading\n} from './context/sourceLoaderContext';\nimport RenderRegistryProvider from './context/RenderRegistryProvider';\nimport { useAmbientTRenderEngine } from './TRenderEngineProvider';\nimport useProfiler from './hooks/useProfiler';\nimport ListStyleSpecsProvider from './context/ListStyleSpecsProvider';\n\nconst childrenRendererContext = {\n  TChildrenRenderer,\n  TNodeChildrenRenderer\n};\n\nexport type RenderHTMLConfigPropTypes = Record<keyof RenderHTMLConfig, any>;\n\nexport const renderHTMLConfigPropTypes: RenderHTMLConfigPropTypes = {\n  defaultTextProps: PropTypes.object,\n  defaultViewProps: PropTypes.object,\n  enableExperimentalMarginCollapsing: PropTypes.bool,\n  remoteErrorView: PropTypes.func,\n  remoteLoadingView: PropTypes.func,\n  debug: PropTypes.bool,\n  computeEmbeddedMaxWidth: PropTypes.func,\n  renderersProps: PropTypes.object,\n  WebView: PropTypes.any,\n  GenericPressable: PropTypes.any,\n  defaultWebViewProps: PropTypes.object,\n  pressableHightlightColor: PropTypes.string,\n  customListStyleSpecs: PropTypes.object,\n  renderers: PropTypes.object\n};\n\n/**\n * A component to provide configuration for {@link RenderHTMLSource}\n * descendants, to be used in conjunction with {@link TRenderEngineProvider}.\n */\nexport default function RenderHTMLConfigProvider(\n  props: PropsWithChildren<RenderHTMLConfig>\n): ReactElement {\n  const {\n    remoteErrorView,\n    remoteLoadingView,\n    renderersProps,\n    children,\n    renderers,\n    ...sharedProps\n  } = props;\n  const engine = useAmbientTRenderEngine();\n  const profile = useProfiler({ prop: 'remoteErrorView or remoteLoadingView' });\n  const sourceLoaderConfig = useMemo(() => {\n    __DEV__ && profile();\n    return {\n      remoteErrorView: remoteErrorView || defaultRenderError,\n      remoteLoadingView: remoteLoadingView || defaultRenderLoading\n    };\n  }, [remoteErrorView, remoteLoadingView, profile]);\n  return (\n    <RenderRegistryProvider\n      renderers={renderers}\n      elementModels={engine.getHTMLElementsModels()}>\n      <SharedPropsProvider {...sharedProps}>\n        <ListStyleSpecsProvider>\n          <RenderersPropsProvider renderersProps={renderersProps}>\n            <TChildrenRenderersContext.Provider value={childrenRendererContext}>\n              <sourceLoaderContext.Provider value={sourceLoaderConfig}>\n                {children}\n              </sourceLoaderContext.Provider>\n            </TChildrenRenderersContext.Provider>\n          </RenderersPropsProvider>\n        </ListStyleSpecsProvider>\n      </SharedPropsProvider>\n    </RenderRegistryProvider>\n  );\n}\n\n/**\n * @ignore\n */\nRenderHTMLConfigProvider.propTypes = renderHTMLConfigPropTypes;\n"]}