{"version":3,"sources":["TChildrenRenderer.tsx"],"names":["isCollapsible","tnode","type","collapseTopMarginForChild","n","tchildren","childTnode","mapCollapsibleChildren","propsForChildren","renderChild","disableMarginCollapsing","collapsedMarginTop","propsFromParent","key","nodeIndex","childElement","React","createElement","TNodeRenderer","index","TChildrenRenderer","elements","map","bind","tchildrenRendererDefaultProps","defaultProps"],"mappings":";;;;;;;;AAAA;;AAEA;;AAEA;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAAqC;AACnC,SAAOA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACC,IAAN,KAAe,UAAhD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,yBAAT,CACLC,CADK,EAELC,SAFK,EAGU;AACf,QAAMC,UAAU,GAAGD,SAAS,CAACD,CAAD,CAA5B;;AACA,MAAIJ,aAAa,CAACM,UAAD,CAAb,IAA6BF,CAAC,GAAG,CAAjC,IAAsCJ,aAAa,CAACK,SAAS,CAACD,CAAC,GAAG,CAAL,CAAV,CAAvD,EAA2E;AACzE,WAAO,oCAAsBC,SAAS,CAACD,CAAC,GAAG,CAAL,CAA/B,EAAwCE,UAAxC,CAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAED,MAAMC,sBAAsB,GAAG,CAC7BC,gBAD6B,EAE7BC,WAF6B,EAG7BC,uBAH6B,EAI7BJ,UAJ6B,EAK7BF,CAL6B,EAM7BC,SAN6B,KAO1B;AACH,QAAMM,kBAAkB,GAAGD,uBAAuB,GAC9C,IAD8C,GAE9CP,yBAAyB,CAACC,CAAD,EAAIC,SAAJ,CAF7B;AAGA,QAAMO,eAAe,GAAG,EAAE,GAAGJ,gBAAL;AAAuBG,IAAAA;AAAvB,GAAxB;AACA,QAAME,GAAG,GAAGP,UAAU,CAACQ,SAAvB;;AACA,QAAMC,YAAY,gBAAGC,eAAMC,aAAN,CAAoBC,sBAApB,EAAmC;AACtDN,IAAAA,eADsD;AAEtDX,IAAAA,KAAK,EAAEK,UAF+C;AAGtDO,IAAAA;AAHsD,GAAnC,CAArB;;AAKA,SAAO,OAAOJ,WAAP,KAAuB,UAAvB,GACHA,WAAW,CAAC;AACVI,IAAAA,GADU;AAEVE,IAAAA,YAFU;AAGVI,IAAAA,KAAK,EAAEf,CAHG;AAIVE,IAAAA,UAJU;AAKVM,IAAAA;AALU,GAAD,CADR,GAQHG,YARJ;AASD,CA3BD;AA6BA;AACA;AACA;AACA;;;AACA,SAASK,iBAAT,CAA2B;AACzBf,EAAAA,SADyB;AAEzBG,EAAAA,gBAFyB;AAGzBE,EAAAA,uBAHyB;AAIzBD,EAAAA;AAJyB,CAA3B,EAKyC;AACvC,QAAMY,QAAQ,GAAGhB,SAAS,CAACiB,GAAV,CACff,sBAAsB,CAACgB,IAAvB,CACE,IADF,EAEEf,gBAFF,EAGEC,WAHF,EAIEC,uBAJF,CADe,CAAjB;AAQA,sBAAO,4DAAGW,QAAH,CAAP;AACD;;AAEM,MAAMG,6BAGZ,GAAG;AACFhB,EAAAA,gBAAgB,EAAE;AADhB,CAHG;AAOP;AACA;AACA;;;AACAY,iBAAiB,CAACK,YAAlB,GAAiCD,6BAAjC;eAEeJ,iB","sourcesContent":["import React, { ReactElement } from 'react';\nimport { TNode } from '@native-html/transient-render-engine';\nimport TNodeRenderer from './TNodeRenderer';\nimport { TChildrenRendererProps } from './shared-types';\nimport getCollapsedMarginTop from './helpers/getCollapsedMarginTop';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\n/**\n * Compute top collapsed margin for the nth {@link TNode}-child of a list of\n * TNodes.\n *\n * @param n - The index for which the top margin should be collapsed.\n * @param tchildren - The list of {@link TNode} children.\n * @returns `null` when no margin collapsing should apply, a number otherwise.\n * @public\n */\nexport function collapseTopMarginForChild(\n  n: number,\n  tchildren: readonly TNode[]\n): number | null {\n  const childTnode = tchildren[n];\n  if (isCollapsible(childTnode) && n > 0 && isCollapsible(tchildren[n - 1])) {\n    return getCollapsedMarginTop(tchildren[n - 1], childTnode);\n  }\n  return null;\n}\n\nconst mapCollapsibleChildren = (\n  propsForChildren: TChildrenRendererProps['propsForChildren'],\n  renderChild: TChildrenRendererProps['renderChild'],\n  disableMarginCollapsing: boolean | undefined,\n  childTnode: TNode,\n  n: number,\n  tchildren: readonly TNode[]\n) => {\n  const collapsedMarginTop = disableMarginCollapsing\n    ? null\n    : collapseTopMarginForChild(n, tchildren);\n  const propsFromParent = { ...propsForChildren, collapsedMarginTop };\n  const key = childTnode.nodeIndex;\n  const childElement = React.createElement(TNodeRenderer, {\n    propsFromParent,\n    tnode: childTnode,\n    key\n  });\n  return typeof renderChild === 'function'\n    ? renderChild({\n        key,\n        childElement,\n        index: n,\n        childTnode,\n        propsFromParent\n      })\n    : childElement;\n};\n\n/**\n * A component to render collections of tnodes.\n * Especially useful when used with {@link useTNodeChildrenProps}.\n */\nfunction TChildrenRenderer({\n  tchildren,\n  propsForChildren,\n  disableMarginCollapsing,\n  renderChild\n}: TChildrenRendererProps): ReactElement {\n  const elements = tchildren.map(\n    mapCollapsibleChildren.bind(\n      null,\n      propsForChildren,\n      renderChild,\n      disableMarginCollapsing\n    )\n  );\n  return <>{elements}</>;\n}\n\nexport const tchildrenRendererDefaultProps: Pick<\n  TChildrenRendererProps,\n  'propsForChildren'\n> = {\n  propsForChildren: {}\n};\n\n/**\n * @ignore\n */\nTChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;\n\nexport default TChildrenRenderer;\n"]}