{"version":3,"sources":["useIMGElementStateWithCache.ts"],"names":["useIMGElementStateWithCache","props","alt","altColor","source","contentWidth","computeMaxWidth","objectFit","initialDimensions","defaultImageInitialDimensions","naturalDimensions","specifiedDimensions","flatStyle","error","onError","concreteDimensions","containerStyle"],"mappings":";;;;;;;AAAA;;AACA;;AAMA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACe,SAASA,2BAAT,CACbC,KADa,EAEkC;AAC/C,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,iBAAiB,GAAGC;AAPhB,MAQFR,KARJ;AASA,QAAM;AAAES,IAAAA,iBAAF;AAAqBC,IAAAA,mBAArB;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,KAArD;AAA4DC,IAAAA;AAA5D,MACJ,wCAA0Bb,KAA1B,CADF;AAEA,QAAMc,kBAAkB,GAAG,yCAA2B;AACpDH,IAAAA,SADoD;AAEpDF,IAAAA,iBAFoD;AAGpDC,IAAAA,mBAHoD;AAIpDL,IAAAA,eAJoD;AAKpDD,IAAAA;AALoD,GAA3B,CAA3B;AAOA,SAAO,8BAAY;AACjBQ,IAAAA,KADiB;AAEjBE,IAAAA,kBAFiB;AAGjBC,IAAAA,cAAc,EAAEJ,SAHC;AAIjBJ,IAAAA,iBAJiB;AAKjBD,IAAAA,SALiB;AAMjBO,IAAAA,OANiB;AAOjBV,IAAAA,MAPiB;AAQjBF,IAAAA,GARiB;AASjBC,IAAAA;AATiB,GAAZ,CAAP;AAWD","sourcesContent":["import defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport { getIMGState } from './getIMGState';\nimport type {\n  UseIMGElementStateWithCacheProps,\n  IMGElementStateError,\n  IMGElementStateSuccess\n} from './img-types';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport useImageNaturalDimensions from './useImageNaturalDimensions';\n\n/**\n * This hook is useful when one has access to image natural dimensions prior to\n * loading. The `cachedNaturalDimensions` prop must be passed to immediately\n * compute concrete dimensions.\n */\nexport default function useIMGElementStateWithCache(\n  props: UseIMGElementStateWithCacheProps\n): IMGElementStateError | IMGElementStateSuccess {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions\n  } = props;\n  const { naturalDimensions, specifiedDimensions, flatStyle, error, onError } =\n    useImageNaturalDimensions(props);\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n  return getIMGState({\n    error,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    onError,\n    source,\n    alt,\n    altColor\n  });\n}\n"]}