{"version":3,"sources":["TDefaultTextualRenderer.tsx"],"names":["TDefaultTextualRenderer","tnode","style","children","textProps","onPress","resolvedStyles","React","createElement","Text","testID","tagName","undefined"],"mappings":";;;;;;;AAAA;;AACA;;;;AAIA,MAAMA,uBAA4D,GAAG,CAAC;AACpEC,EAAAA,KADoE;AAEpEC,EAAAA,KAFoE;AAGpEC,EAAAA,QAHoE;AAIpEC,EAAAA,SAJoE;AAKpEC,EAAAA;AALoE,CAAD,KAM/D;AACJ,QAAMC,cAAc,GAAGF,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEF,KAAX,GAAmB,CAACA,KAAD,EAAQE,SAAS,CAACF,KAAlB,CAAnB,GAA8CA,KAArE;AACA,sBAAOK,eAAMC,aAAN,CACLC,iBADK,EAEL,EACE,GAAGL,SADL;AAEEC,IAAAA,OAFF;AAGEH,IAAAA,KAAK,EAAEI,cAHT;AAIEI,IAAAA,MAAM,EAAET,KAAK,CAACU,OAAN,IAAiBC;AAJ3B,GAFK,EAQLT,QARK,CAAP;AAUD,CAlBD;;eAoBeH,uB","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport { TPhrasing, TText } from '@native-html/transient-render-engine';\nimport { TDefaultRenderer } from './shared-types';\n\nconst TDefaultTextualRenderer: TDefaultRenderer<TPhrasing | TText> = ({\n  tnode,\n  style,\n  children,\n  textProps,\n  onPress\n}) => {\n  const resolvedStyles = textProps?.style ? [style, textProps.style] : style;\n  return React.createElement(\n    Text,\n    {\n      ...textProps,\n      onPress,\n      style: resolvedStyles,\n      testID: tnode.tagName || undefined\n    },\n    children\n  );\n};\n\nexport default TDefaultTextualRenderer;\n"]}