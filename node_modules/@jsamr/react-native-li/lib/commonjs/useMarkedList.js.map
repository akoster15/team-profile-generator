{"version":3,"sources":["useMarkedList.ts"],"names":["defaultRenderMarker","props","React","createElement","MarkerBox","defaultComputeMarkerBoxWidth","maxNumOfCodepoints","fontSize","DEFAULT_FONT_SIZE","useMarkedList","counterRenderer","startIndex","lineStyle","rtlLineReversed","rtlMarkerReversed","markerTextStyle","markerBoxStyle","dynamicMarkerBoxWidth","length","renderMarker","computeMarkerBoxWidth","maxMarkerLenInRange","syntheticRtlLineReversed","I18nManager","isRTL","markerTextWidth","renderer","withRtl","undefined","syntheticMarkerTextStyle","flexGrow","flexShrink","textAlign","alignSelf","style"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAIA,MAAMA,mBAAiE,GACrEC,KADwE,iBAErEC,eAAMC,aAAN,CAAoBC,kBAApB,EAA+BH,KAA/B,CAFL;;AAIA,MAAMI,4BAEL,GAAG,CAACC,kBAAD,EAAqBC,QAArB,KAAkCD,kBAAkB,GAAGC,QAArB,GAAgC,GAFtE;;AAIA,MAAMC,iBAAiB,GAAG,EAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,eADoC;AAEpCC,EAAAA,UAAU,GAAG,CAFuB;AAGpCC,EAAAA,SAHoC;AAIpCC,EAAAA,eAAe,GAAG,KAJkB;AAKpCC,EAAAA,iBAAiB,GAAG,KALgB;AAMpCC,EAAAA,eANoC;AAOpCC,EAAAA,cAPoC;AAQpCC,EAAAA,qBAAqB,GAAG,IARY;AASpCC,EAAAA,MAAM,GAAG,CAT2B;AAUpCC,EAAAA,YAAY,GAAGnB,mBAVqB;AAWpCoB,EAAAA,qBAAqB,GAAGf;AAXY,CAAvB,EAY8D;AAC3E,QAAMC,kBAAkB,GAAG,oBACzB,MACEI,eAAe,CAACW,mBAAhB,CAAoCV,UAApC,EAAgDA,UAAU,GAAGO,MAAb,GAAsB,CAAtE,CAFuB,EAGzB,CAACR,eAAD,EAAkBQ,MAAlB,EAA0BP,UAA1B,CAHyB,CAA3B;AAKA,QAAMW,wBAAwB,GAAG,CAACC,yBAAYC,KAAb,IAAsBX,eAAvD;AACA,QAAMY,eAAe,GAAG,oBACtB;AAAA;;AAAA,WACER,qBAAqB,IACrBG,qBAAqB,CACnBd,kBADmB,2BAEnBS,eAFmB,aAEnBA,eAFmB,uBAEnBA,eAAe,CAAER,QAFE,yEAEUC,iBAFV,CAFvB;AAAA,GADsB,EAOtB,CACEY,qBADF,EAEEL,eAFF,aAEEA,eAFF,uBAEEA,eAAe,CAAER,QAFnB,EAGED,kBAHF,EAIEW,qBAJF,CAPsB,CAAxB;AAcA,QAAMS,QAAQ,GAAG,oBACf,MACEZ,iBAAiB,GACbJ,eAAe,CAACiB,OAAhB,CACEb,iBAAiB,KAAK,IAAtB,GAA6Bc,SAA7B,GAAyCd,iBAD3C,CADa,GAIbJ,eANS,EAOf,CAACA,eAAD,EAAkBI,iBAAlB,CAPe,CAAjB;AASA,QAAMe,wBAAwB,GAAG,oBAC/B,OACG;AACCC,IAAAA,QAAQ,EAAE,CADX;AAECC,IAAAA,UAAU,EAAE,CAFb;AAGCxB,IAAAA,QAAQ,EAAEC,iBAHX;AAICwB,IAAAA,SAAS,EAAEV,wBAAwB,GAAG,MAAH,GAAY,OAJhD;AAKCW,IAAAA,SAAS,EAAEX,wBAAwB,GAAG,YAAH,GAAkB,UALtD;AAMC,OAAGP;AANJ,GADH,CAD+B,EAU/B,CAACA,eAAD,EAAkBO,wBAAlB,CAV+B,CAAjC;AAYA,SAAO;AACLhB,IAAAA,kBADK;AAELQ,IAAAA,iBAFK;AAGLW,IAAAA,eAHK;AAILN,IAAAA,YAJK;AAKLR,IAAAA,UALK;AAMLE,IAAAA,eAAe,EAAES,wBANZ;AAOLP,IAAAA,eAAe,EAAEc,wBAPZ;AAQLb,IAAAA,cAAc,EAAEA,cARX;AASLN,IAAAA,eAAe,EAAEgB,QATZ;AAULQ,IAAAA,KAAK,EAAEtB;AAVF,GAAP;AAYD","sourcesContent":["import React, { useMemo } from 'react';\nimport { I18nManager } from 'react-native';\nimport MarkerBox from './MarkerBox';\nimport { MarkedListItemProps } from './MarkedListItem';\nimport { MarkedListProps } from './shared-types';\n\nconst defaultRenderMarker: NonNullable<MarkedListProps['renderMarker']> = (\n  props\n) => React.createElement(MarkerBox, props);\n\nconst defaultComputeMarkerBoxWidth: NonNullable<\n  MarkedListProps['computeMarkerBoxWidth']\n> = (maxNumOfCodepoints, fontSize) => maxNumOfCodepoints * fontSize * 0.6;\n\nconst DEFAULT_FONT_SIZE = 14;\n\n/**\n * A hook to reuse MarkedList logic to render custom lists components in\n * combination with {@link MarkedListItem}.\n *\n * @public\n */\nexport default function useMarkedList({\n  counterRenderer,\n  startIndex = 1,\n  lineStyle,\n  rtlLineReversed = false,\n  rtlMarkerReversed = false,\n  markerTextStyle,\n  markerBoxStyle,\n  dynamicMarkerBoxWidth = true,\n  length = 0,\n  renderMarker = defaultRenderMarker,\n  computeMarkerBoxWidth = defaultComputeMarkerBoxWidth\n}: MarkedListProps & { length: number }): Omit<MarkedListItemProps, 'index'> {\n  const maxNumOfCodepoints = useMemo(\n    () =>\n      counterRenderer.maxMarkerLenInRange(startIndex, startIndex + length - 1),\n    [counterRenderer, length, startIndex]\n  );\n  const syntheticRtlLineReversed = !I18nManager.isRTL && rtlLineReversed;\n  const markerTextWidth = useMemo(\n    () =>\n      dynamicMarkerBoxWidth &&\n      computeMarkerBoxWidth(\n        maxNumOfCodepoints,\n        markerTextStyle?.fontSize ?? DEFAULT_FONT_SIZE\n      ),\n    [\n      computeMarkerBoxWidth,\n      markerTextStyle?.fontSize,\n      maxNumOfCodepoints,\n      dynamicMarkerBoxWidth\n    ]\n  );\n  const renderer = useMemo(\n    () =>\n      rtlMarkerReversed\n        ? counterRenderer.withRtl(\n            rtlMarkerReversed === true ? undefined : rtlMarkerReversed\n          )\n        : counterRenderer,\n    [counterRenderer, rtlMarkerReversed]\n  );\n  const syntheticMarkerTextStyle = useMemo(\n    () =>\n      ({\n        flexGrow: 0,\n        flexShrink: 0,\n        fontSize: DEFAULT_FONT_SIZE,\n        textAlign: syntheticRtlLineReversed ? 'left' : 'right',\n        alignSelf: syntheticRtlLineReversed ? 'flex-start' : 'flex-end',\n        ...markerTextStyle\n      } as const),\n    [markerTextStyle, syntheticRtlLineReversed]\n  );\n  return {\n    maxNumOfCodepoints,\n    rtlMarkerReversed,\n    markerTextWidth,\n    renderMarker,\n    startIndex,\n    rtlLineReversed: syntheticRtlLineReversed,\n    markerTextStyle: syntheticMarkerTextStyle,\n    markerBoxStyle: markerBoxStyle as any,\n    counterRenderer: renderer,\n    style: lineStyle\n  };\n}\n"]}