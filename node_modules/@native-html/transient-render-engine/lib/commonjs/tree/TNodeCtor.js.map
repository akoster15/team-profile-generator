{"version":3,"sources":["TNodeCtor.ts"],"names":["updateNodeIndexes","node","i","nodeIndex","emptyAttrs","Object","freeze","emptyClasses","setMarkersFromAttributes","targetMarkers","_parentMarkers","attributes","direction","dir","lang","prototype","children","init","classes","styles","TStyles","empty","__nodeIndex","__trimmedLeft","__trimmedRight","markers","markersProtype","domNode","attribs","hasWhiteSpaceCollapsingEnabled","webTextFlow","whiteSpace","contentModel","elementModel","parentStyles","parent","id","tagName","name","isUnregistered","bindChildren","shouldUpdateNodeIndexes","forEach","cloneInitParams","partial","assign","isCollapsibleLeft","length","isCollapsibleRight","isEmpty","trimLeft","firstChild","splice","trimRight","lastChild","matchContentModel","spliceChildren","indexesToSplice","offset","collapse","collapseChildren","getNativeStyles","nativeBlockFlow","nativeBlockRet","nativeTextFlow","nativeTextRet","getWebStyles","webBlockRet","snapshot","options","withStyles","withNodeIndex","hasClass","className","indexOf","toString","setMarkers","parentMarkers","setMarkersForTNode","context","initialize","class","split","extend","keys","stylesMerger","buildStyles","style","TNodeCtor","TNode","type","displayName","extraAccessors","defineProperties"],"mappings":"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","sourcesContent":["import { TStyles } from '../styles/TStyles';\nimport markersProtype from './markersProtype';\nimport tnodeToString from './tnodeSnapshot';\nimport {\n  Markers,\n  TNodeDescriptor,\n  TNodeImpl,\n  TNodeInit,\n  TNodeType\n} from './tree-types';\n\nexport type GenericTNodeCtor<Init = TNodeInit, Impl = TNodeImpl> = {\n  new (init: Init): Impl;\n  prototype: Impl;\n};\n\nexport type Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nfunction updateNodeIndexes(node: Mutable<TNodeImpl>, i: number) {\n  node.nodeIndex = i;\n}\n\nconst emptyAttrs = Object.freeze({});\nconst emptyClasses = Object.freeze([]);\n\nfunction setMarkersFromAttributes(\n  targetMarkers: Markers,\n  _parentMarkers: Readonly<Markers>,\n  { attributes }: TNodeDescriptor\n): void {\n  if ('dir' in attributes) {\n    targetMarkers.direction = attributes.dir as 'rtl';\n  }\n  if ('lang' in attributes) {\n    targetMarkers.lang = attributes.lang;\n  }\n}\n\nconst prototype: Omit<TNodeImpl, 'displayName' | 'type'> = {\n  children: Object.freeze([]) as any,\n  init: Object.freeze({}) as any,\n  classes: Object.freeze([]) as any,\n  styles: Object.freeze(TStyles.empty()) as any,\n  __nodeIndex: null,\n  __trimmedLeft: false,\n  __trimmedRight: false,\n  markers: markersProtype,\n  get attributes() {\n    return this.domNode?.attribs || emptyAttrs;\n  },\n\n  get hasWhiteSpaceCollapsingEnabled() {\n    return typeof this.styles.webTextFlow.whiteSpace === 'string'\n      ? this.styles.webTextFlow.whiteSpace === 'normal'\n      : true;\n  },\n\n  get contentModel() {\n    return this.elementModel?.contentModel || null;\n  },\n\n  get parentStyles() {\n    return this.init.parentStyles || this.parent?.styles || null;\n  },\n\n  get id() {\n    return this.attributes.id || null;\n  },\n\n  get domNode() {\n    return this.init.domNode || null;\n  },\n\n  get elementModel() {\n    return this.init.elementModel;\n  },\n\n  get tagName() {\n    return this.init.domNode?.name || null;\n  },\n\n  get parent() {\n    return (this.init.parent as any) || null;\n  },\n\n  get nodeIndex() {\n    if (this.__nodeIndex === null) {\n      this.__nodeIndex = this.init.nodeIndex || 0;\n    }\n    return this.__nodeIndex;\n  },\n\n  get isUnregistered() {\n    return this.init.isUnregistered || false;\n  },\n\n  set nodeIndex(nodeIndex: number) {\n    this.__nodeIndex = nodeIndex;\n  },\n\n  bindChildren(children, shouldUpdateNodeIndexes = false) {\n    //@ts-ignore\n    this.children = children;\n    if (shouldUpdateNodeIndexes) {\n      children.forEach(updateNodeIndexes);\n    }\n  },\n\n  cloneInitParams(partial) {\n    return Object.assign({}, this.init, partial) as any;\n  },\n\n  isCollapsibleLeft() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[0].isCollapsibleLeft()\n      );\n    }\n    return false;\n  },\n\n  isCollapsibleRight() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[this.children.length - 1].isCollapsibleRight()\n      );\n    }\n    return false;\n  },\n\n  isEmpty() {\n    return false;\n  },\n\n  trimLeft() {\n    if (!this.__trimmedLeft && this.children.length) {\n      const firstChild = this.children[0];\n      firstChild.trimLeft();\n      if (firstChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(0, 1);\n      }\n      this.__trimmedLeft = true;\n    }\n  },\n\n  trimRight() {\n    if (!this.__trimmedRight && this.children.length) {\n      const lastChild = this.children[this.children.length - 1];\n      lastChild.trimRight();\n      if (lastChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(-1, 1);\n      }\n      this.__trimmedRight = true;\n    }\n  },\n\n  matchContentModel() {\n    return false;\n  },\n\n  spliceChildren(indexesToSplice) {\n    let offset = 0;\n    for (const i of indexesToSplice) {\n      //@ts-ignore\n      this.children.splice(i - offset, 1);\n      offset += 1;\n    }\n  },\n\n  collapse() {\n    this.collapseChildren();\n    this.bindChildren(this.children, true);\n  },\n\n  getNativeStyles() {\n    return {\n      ...this.styles.nativeBlockFlow,\n      ...this.styles.nativeBlockRet,\n      ...this.styles.nativeTextFlow,\n      ...this.styles.nativeTextRet\n    };\n  },\n\n  getWebStyles() {\n    return {\n      ...this.styles.webTextFlow,\n      ...this.styles.webBlockRet\n    } as any;\n  },\n\n  collapseChildren() {\n    return;\n  },\n\n  snapshot(options = {}) {\n    const { withStyles = false, withNodeIndex = false } = options;\n    return tnodeToString(this as any, { withStyles, withNodeIndex });\n  },\n\n  hasClass(className) {\n    return this.classes.indexOf(className) > -1;\n  },\n\n  toString() {\n    return this.snapshot();\n  },\n\n  setMarkers(targetMarkers, parentMarkers) {\n    if (this.elementModel?.setMarkersForTNode) {\n      this.elementModel.setMarkersForTNode(targetMarkers, parentMarkers, this);\n    }\n    setMarkersFromAttributes(targetMarkers, parentMarkers, this);\n    this.init.context.setMarkersForTNode?.(targetMarkers, parentMarkers, this);\n  },\n\n  initialize<Impl extends TNodeImpl<TNodeInit> = TNodeImpl>(\n    this: Mutable<Impl>,\n    init: Impl['init']\n  ) {\n    this.init = init;\n    this.classes = this.attributes.class?.split(/\\s+/) || emptyClasses;\n    const parentMarkers = init.parent\n      ? init.parent.markers\n      : markersProtype.extend();\n    this.markers = parentMarkers.extend();\n    this.setMarkers(this.markers, parentMarkers, this);\n    // Avoid very long prototype chains by assigning parent to current\n    // when current has no own properties\n    if (Object.keys(this.markers).length === 0) {\n      this.markers = parentMarkers;\n    }\n    this.styles =\n      init.styles ||\n      init.context.stylesMerger.buildStyles(\n        this.attributes.style,\n        this.parentStyles || null,\n        this\n      );\n  }\n};\n\nconst TNodeCtor = function TNode<Impl extends TNodeImpl = TNodeImpl>(\n  this: Mutable<TNodeImpl>,\n  type: TNodeType,\n  displayName: string,\n  extraAccessors?: {\n    [k in Exclude<keyof Impl, keyof TNodeImpl>]: {\n      get: () => any;\n      set?: (val: any) => void;\n    };\n  }\n) {\n  this.type = type;\n  this.displayName = displayName;\n  extraAccessors && Object.defineProperties(this, extraAccessors);\n};\n\nTNodeCtor.prototype = prototype as any;\n\nexport default TNodeCtor;\n"]}